{"ast":null,"code":"var _jsxFileName = \"/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/components/MapComponent/Map.js\";\nimport React, { Fragment } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Circle } from \"react-google-maps\";\n\nconst Map = props => {\n  var options1 = {\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35\n  };\n  var options2 = {\n    strokeColor: '#A52A2A',\n    strokeOpacity: 1,\n    strokeWeight: 4,\n    fillColor: '#A52A2A',\n    fillOpacity: 0.5\n  };\n  var palces = props.places;\n  places = places.filter(place => place.Confirmed > 0);\n  return React.createElement(GoogleMap, {\n    defaultZoom: props.zoom,\n    defaultCenter: props.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.places.map((place, index) => {\n    place.radius = place.Confirmed;\n    place.options = options1;\n\n    if (place.Confirmed > 10000) {\n      place.radius = place.Confirmed / 10;\n      place.options = options2;\n    }\n\n    return React.createElement(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Circle, {\n      defaultCenter: {\n        lat: parseFloat(place.center.lat),\n        lng: parseFloat(place.center.lng)\n      },\n      radius: place.radius * 100,\n      options: place.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default withScriptjs(withGoogleMap(Map));","map":{"version":3,"sources":["/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/components/MapComponent/Map.js"],"names":["React","Fragment","withGoogleMap","GoogleMap","withScriptjs","Circle","Map","props","options1","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","options2","palces","places","filter","place","Confirmed","zoom","center","map","index","radius","options","lat","parseFloat","lng"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,QAKO,mBALP;;AAOA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACjB,MAAIC,QAAQ,GAAC;AACTC,IAAAA,WAAW,EAAE,SADJ;AAETC,IAAAA,aAAa,EAAE,GAFN;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,SAAS,EAAE,SAJF;AAKTC,IAAAA,WAAW,EAAE;AALJ,GAAb;AAOA,MAAIC,QAAQ,GAAC;AACTL,IAAAA,WAAW,EAAE,SADJ;AAETC,IAAAA,aAAa,EAAE,CAFN;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,SAAS,EAAE,SAJF;AAKTC,IAAAA,WAAW,EAAE;AALJ,GAAb;AAOA,MAAIE,MAAM,GAACR,KAAK,CAACS,MAAjB;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACC,SAAN,GAAgB,CAAzC,CAAT;AAEA,SACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEZ,KAAK,CAACa,IADrB;AAEE,IAAA,aAAa,EAAEb,KAAK,CAACc,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGd,KAAK,CAACS,MAAN,CAAaM,GAAb,CAAiB,CAACJ,KAAD,EAAOK,KAAP,KAAiB;AAC/BL,IAAAA,KAAK,CAACM,MAAN,GAAaN,KAAK,CAACC,SAAnB;AACAD,IAAAA,KAAK,CAACO,OAAN,GAAcjB,QAAd;;AACA,QAAGU,KAAK,CAACC,SAAN,GAAgB,KAAnB,EAAyB;AACrBD,MAAAA,KAAK,CAACM,MAAN,GAAaN,KAAK,CAACC,SAAN,GAAgB,EAA7B;AACAD,MAAAA,KAAK,CAACO,OAAN,GAAcX,QAAd;AACH;;AACH,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAES,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbG,QAAAA,GAAG,EAAEC,UAAU,CAACT,KAAK,CAACG,MAAN,CAAaK,GAAd,CADF;AAEbE,QAAAA,GAAG,EAAED,UAAU,CAACT,KAAK,CAACG,MAAN,CAAaO,GAAd;AAFF,OADjB;AAKE,MAAA,MAAM,EAAEV,KAAK,CAACM,MAAN,GAAa,GALvB;AAME,MAAA,OAAO,EAAEN,KAAK,CAACO,OANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAaD,GApBA,CANH,CADF;AA8BH,CAhDD;;AAkDA,eAAerB,YAAY,CAACF,aAAa,CAACI,GAAD,CAAd,CAA3B","sourcesContent":["import React, {Fragment} from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Circle\n} from \"react-google-maps\";\n\nconst Map = props => {\n    var options1={\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n    }\n    var options2={\n        strokeColor: '#A52A2A',\n        strokeOpacity: 1,\n        strokeWeight: 4,\n        fillColor: '#A52A2A',\n        fillOpacity: 0.5,\n    }\n    var palces=props.places;\n    places = places.filter((place) => place.Confirmed>0);\n    \n    return (\n      <GoogleMap\n        defaultZoom={props.zoom}\n        defaultCenter={props.center}\n      >\n        \n        \n        {props.places.map((place,index) => {\n            place.radius=place.Confirmed;\n            place.options=options1;\n            if(place.Confirmed>10000){\n                place.radius=place.Confirmed/10;\n                place.options=options2;\n            }  \n          return (\n            <Fragment key={index}>\n              \n              <Circle\n                defaultCenter={{\n                  lat: parseFloat(place.center.lat),\n                  lng: parseFloat(place.center.lng)\n                }}\n                radius={place.radius*100}\n                options={place.options}\n              />\n            </Fragment>\n          );\n        })}\n      </GoogleMap>\n    );\n}\n\nexport default withScriptjs(withGoogleMap(Map));\n"]},"metadata":{},"sourceType":"module"}