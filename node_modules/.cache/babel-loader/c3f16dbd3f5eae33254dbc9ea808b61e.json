{"ast":null,"code":"var _jsxFileName = \"/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/variables/Chart.js\";\nimport React, { Component } from 'react';\nimport JSONdata from \"../data.json\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nclass Chart extends Component {\n  createLegend(json) {\n    var legend = [];\n\n    for (var i = 0; i < json[\"legend_name\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n      legend.push(\" \");\n      legend.push(json[\"legend_name\"][i]);\n    }\n\n    return legend;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    var labels = JSONdata.US_Week_time.xlabel;\n    var series = JSONdata.US_Week_time.series;\n    var data = {};\n    labels.forEach((label, i) => data[label] = series[i]);\n    var dataCollectTime = JSONdata.Date;\n    var types = [\"info\", \"danger\", \"warning\"];\n    var legend_name = JSONdata.US_Week_time.series_label;\n    var legend = {\n      legend_name,\n      types\n    };\n    console.log(legend);\n    return React.createElement(Card, {\n      statsIcon: \"fa fa-history\",\n      id: \"chartHours\",\n      title: \"Weekly Total Cases in US\",\n      category: \"Daliy updates\",\n      stats: \"Updated by \" + dataCollectTime,\n      content: React.createElement(\"div\", {\n        className: \"ct-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        width: 500,\n        height: 300,\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"xlable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"pv\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))),\n      legend: React.createElement(\"div\", {\n        className: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.createLegend(legend)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/variables/Chart.js"],"names":["React","Component","JSONdata","Card","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Chart","createLegend","json","legend","i","length","type","push","constructor","props","state","render","labels","US_Week_time","xlabel","series","data","forEach","label","dataCollectTime","Date","types","legend_name","series_label","console","log","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport JSONdata from \"../data.json\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nclass Chart extends Component {\n    createLegend(json) {\n      var legend = [];\n      for (var i = 0; i < json[\"legend_name\"].length; i++) {\n        var type = \"fa fa-circle text-\" + json[\"types\"][i];\n        legend.push(<i className={type} key={i} />);\n        legend.push(\" \");\n        legend.push(json[\"legend_name\"][i]);\n      }\n      return legend;\n    }\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        var labels= JSONdata.US_Week_time.xlabel;\n        var series= JSONdata.US_Week_time.series;  \n        var data = {};\n        labels.forEach((label, i) => data[label] = series[i]);\n        var dataCollectTime=JSONdata.Date;\n        var types= [\"info\", \"danger\", \"warning\"];\n        var legend_name=JSONdata.US_Week_time.series_label;\n        var legend={legend_name, types};\n        console.log(legend);\n        return (\n            <Card\n            statsIcon=\"fa fa-history\"\n            id=\"chartHours\"\n            title=\"Weekly Total Cases in US\"\n            category=\"Daliy updates\"\n            stats={\"Updated by \"+dataCollectTime}\n            content={\n              <div className=\"ct-chart\">\n                <LineChart\n                  width={500}\n                  height={300}\n                  data={data}\n                  margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"xlable\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n                </LineChart>\n              </div>\n            }\n            legend={\n              <div className=\"legend\">{this.createLegend(legend)}</div>\n            }\n          />\n        );\n    }\n}\n \nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}