{"ast":null,"code":"var _jsxFileName = \"/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/src/views/Maps.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport JSONdata from \"../data.json\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nvar US_location = JSONdata.US_location;\nexport class Maps extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.displayMarkers = () => {\n      return US_location.map((location, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: location.center.lat,\n            lng: location.center.lng\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  render() {\n    const coords = {\n      lat: 37.09,\n      lng: -95.712\n    };\n    return React.createElement(Map, {\n      initialCenter: coords,\n      google: this.props.google,\n      zoom: 4.75,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.displayMarkers());\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCD66iXvfQg8hp7BPTdsXxIgG1S_6EK998\"\n})(Maps); // class Maps extends Component {\n//   static defaultProps = {\n//     center: {\n//       lat: 37.09,\n//       lng: -95.712\n//     },\n//     zoom: 4.75\n//   };\n//   renderMarkers(map, maps){\n//     let marker = new maps.Marker({\n//     position: { lat: 37.09, lng: -95.712 },\n//     map,\n//     title: 'Hello World!'\n//     });\n//     return marker;\n//    }\n//    render() {\n//     return (\n//         <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//     );\n//   }\n//   render() {\n//     // var circles = US_location.map(location => {\n//     //   return (\n//     //     //   <Circle\n//     //     //     defaultCenter={{\n//     //     //       lat: parseFloat(location.center.lat),\n//     //     //       lng: parseFloat(location.center.lng)\n//     //     //     }}\n//     //     //     radius={location.Confirmed}\n//     //     //     options={{ fillColor: 'red', strokeColor: 'red' }}\n//     //     //   />\n//     //     // )\n//     //     \"hello\"\n//     //   );\n//     // });\n//     return (\n//       // Important! Always set the container height explicitly\n//       <div style={{ height: \"100vh\", width: \"100%\" }}>\n//         <GoogleMapReact\n//           bootstrapURLKeys={{ key: \"AIzaSyCD66iXvfQg8hp7BPTdsXxIgG1S_6EK998\" }}\n//           defaultCenter={this.props.center}\n//           defaultZoom={this.props.zoom}\n//           yesIWantToUseGoogleMapApiInternals\n//           onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\n//         >\n//           {/* <Circle\n//             center={{\n//               lat: \"37.09\",\n//               lng: \"37.09\"\n//             }}\n//             radius={\"5\"}\n//             strokeColor=\"#0000FF\"\n//             strokeOpacity={0.2}\n//             strokeWeight={1}\n//             fillColor=\"#0000FF\"\n//             fillOpacity={0.1}\n//             editable={true}\n//             draggable={true}\n//           /> */}\n//           <AnyReactComponent lat={59.955413} lng={30.337844} text=\"My Marker\" />\n//         </GoogleMapReact>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/src/views/Maps.jsx"],"names":["JSONdata","React","Component","Map","GoogleApiWrapper","Marker","US_location","Maps","displayMarkers","map","location","index","lat","center","lng","console","log","render","coords","props","google","width","height","apiKey"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAkBA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,QAA8C,mBAA9C;AAEA,IAAIC,WAAW,GAAGN,QAAQ,CAACM,WAA3B;AAEA,OAAO,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAElCM,cAFkC,GAEjB,MAAM;AACrB,aAAOF,WAAW,CAACG,GAAZ,CAAgB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC1C,eAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,EAAE,EAAEA,KAAxB;AAA+B,UAAA,QAAQ,EAAE;AAC/CC,YAAAA,GAAG,EAAEF,QAAQ,CAACG,MAAT,CAAgBD,GAD0B;AAE/CE,YAAAA,GAAG,EAAEJ,QAAQ,CAACG,MAAT,CAAgBC;AAF0B,WAAzC;AAIR,UAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,OANM,CAAP;AAOD,KAViC;AAAA;;AAalCC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG;AAAEN,MAAAA,GAAG,EAAE,KAAP;AAAcE,MAAAA,GAAG,EAAE,CAAC;AAApB,KAAf;AAEA,WAEE,oBAAC,GAAD;AACE,MAAA,aAAa,EAAEI,MADjB;AAEE,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAFrB;AAGE,MAAA,IAAI,EAAE,IAHR;AAIE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKd,cAAL,EANH,CAFF;AAWD;;AA3BiC;AA8BpC,eAAeJ,gBAAgB,CAAC;AAC9BmB,EAAAA,MAAM,EAAG;AADqB,CAAD,CAAhB,CAEZhB,IAFY,CAAf,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\nimport JSONdata from \"../data.json\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nvar US_location = JSONdata.US_location;\n\nexport class Maps extends Component {\n\n  displayMarkers = () => {\n    return US_location.map((location, index) => {\n      return <Marker key={index} id={index} position={{\n       lat: location.center.lat,\n       lng: location.center.lng\n     }}\n     onClick={() => console.log(\"You clicked me!\")} />\n    })\n  }\n\n\n  render() {\n    const coords = { lat: 37.09, lng: -95.712 };\n    \n    return (\n      \n      <Map \n        initialCenter={coords}\n        google={this.props.google} \n        zoom={4.75}\n        style={{width: \"100%\", height: \"100%\"}}\n      >\n        {this.displayMarkers()}\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: (\"AIzaSyCD66iXvfQg8hp7BPTdsXxIgG1S_6EK998\")\n})(Maps)\n\n\n\n\n\n\n\n\n\n\n\n// class Maps extends Component {\n//   static defaultProps = {\n//     center: {\n//       lat: 37.09,\n//       lng: -95.712\n//     },\n//     zoom: 4.75\n//   };\n\n//   renderMarkers(map, maps){\n//     let marker = new maps.Marker({\n//     position: { lat: 37.09, lng: -95.712 },\n//     map,\n//     title: 'Hello World!'\n//     });\n//     return marker;\n//    }\n\n//    render() {\n//     return (\n//         <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//     );\n//   }\n\n//   render() {\n//     // var circles = US_location.map(location => {\n//     //   return (\n//     //     //   <Circle\n//     //     //     defaultCenter={{\n//     //     //       lat: parseFloat(location.center.lat),\n//     //     //       lng: parseFloat(location.center.lng)\n//     //     //     }}\n//     //     //     radius={location.Confirmed}\n//     //     //     options={{ fillColor: 'red', strokeColor: 'red' }}\n//     //     //   />\n//     //     // )\n//     //     \"hello\"\n//     //   );\n//     // });\n//     return (\n//       // Important! Always set the container height explicitly\n//       <div style={{ height: \"100vh\", width: \"100%\" }}>\n//         <GoogleMapReact\n//           bootstrapURLKeys={{ key: \"AIzaSyCD66iXvfQg8hp7BPTdsXxIgG1S_6EK998\" }}\n//           defaultCenter={this.props.center}\n//           defaultZoom={this.props.zoom}\n//           yesIWantToUseGoogleMapApiInternals\n//           onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\n//         >\n//           {/* <Circle\n//             center={{\n//               lat: \"37.09\",\n//               lng: \"37.09\"\n//             }}\n//             radius={\"5\"}\n//             strokeColor=\"#0000FF\"\n//             strokeOpacity={0.2}\n//             strokeWeight={1}\n//             fillColor=\"#0000FF\"\n//             fillOpacity={0.1}\n//             editable={true}\n//             draggable={true}\n//           /> */}\n//           <AnyReactComponent lat={59.955413} lng={30.337844} text=\"My Marker\" />\n//         </GoogleMapReact>\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}