{"ast":null,"code":"var _jsxFileName = \"/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/variables/Bar.js\";\nimport React, { Component } from 'react';\nimport JSONdata from \"../data.json\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { ColumnChart } from 'react-chartkick';\n\nclass Bar extends Component {\n  createLegend(json) {\n    var legend = [];\n\n    for (var i = 0; i < json[\"legend_name\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }));\n      legend.push(\" \");\n      legend.push(json[\"legend_name\"][i]);\n    }\n\n    return legend;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    var labels = JSONdata.US_Month_time.xlabel;\n    var series = JSONdata.US_Month_time.series;\n    var dataCollectTime = JSONdata.Date;\n    var legend_name = JSONdata.US_Month_time.series_label;\n    var allData = [];\n    legend_name.forEach(function (name, i) {\n      var dataset = {};\n      dataset[\"name\"] = name;\n      var data = {};\n      labels.forEach((label, j) => data[label] = series[i][j]);\n      dataset[\"data\"] = data;\n      allData.push(dataset);\n    });\n    return React.createElement(Card, {\n      statsIcon: \"fa fa-history\" //id=\"chartHours\"\n      ,\n      title: \"Daily Reported Cases in US\",\n      category: \"Daliy updates\",\n      stats: \"Updated by \" + dataCollectTime,\n      content: React.createElement(\"div\", {\n        className: \"ct-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(ColumnChart, {\n        data: allData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Bar;","map":{"version":3,"sources":["/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/variables/Bar.js"],"names":["React","Component","JSONdata","Card","ColumnChart","Bar","createLegend","json","legend","i","length","type","push","constructor","props","state","render","labels","US_Month_time","xlabel","series","dataCollectTime","Date","legend_name","series_label","allData","forEach","name","dataset","data","label","j"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAAC,aAAD,CAAJ,CAAoBG,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACnD,UAAIE,IAAI,GAAG,uBAAuBJ,IAAI,CAAC,OAAD,CAAJ,CAAcE,CAAd,CAAlC;AACAD,MAAAA,MAAM,CAACI,IAAP,CAAY;AAAG,QAAA,SAAS,EAAED,IAAd;AAAoB,QAAA,GAAG,EAAEF,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AACAD,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACAJ,MAAAA,MAAM,CAACI,IAAP,CAAYL,IAAI,CAAC,aAAD,CAAJ,CAAoBE,CAApB,CAAZ;AACD;;AACD,WAAOD,MAAP;AACD;;AACDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIC,MAAM,GAAEf,QAAQ,CAACgB,aAAT,CAAuBC,MAAnC;AACA,QAAIC,MAAM,GAAElB,QAAQ,CAACgB,aAAT,CAAuBE,MAAnC;AACA,QAAIC,eAAe,GAACnB,QAAQ,CAACoB,IAA7B;AACA,QAAIC,WAAW,GAACrB,QAAQ,CAACgB,aAAT,CAAuBM,YAAvC;AACA,QAAIC,OAAO,GAAG,EAAd;AACAF,IAAAA,WAAW,CAACG,OAAZ,CAAoB,UAASC,IAAT,EAAelB,CAAf,EAAiB;AACnC,UAAImB,OAAO,GAAC,EAAZ;AACAA,MAAAA,OAAO,CAAC,MAAD,CAAP,GAAgBD,IAAhB;AACA,UAAIE,IAAI,GAAC,EAAT;AACAZ,MAAAA,MAAM,CAACS,OAAP,CAAe,CAACI,KAAD,EAAQC,CAAR,KAAcF,IAAI,CAACC,KAAD,CAAJ,GAAcV,MAAM,CAACX,CAAD,CAAN,CAAUsB,CAAV,CAA3C;AACAH,MAAAA,OAAO,CAAC,MAAD,CAAP,GAAgBC,IAAhB;AACAJ,MAAAA,OAAO,CAACb,IAAR,CAAagB,OAAb;AACD,KAPD;AAQA,WACI,oBAAC,IAAD;AACA,MAAA,SAAS,EAAC,eADV,CAEA;AAFA;AAGA,MAAA,KAAK,EAAC,4BAHN;AAIA,MAAA,QAAQ,EAAC,eAJT;AAKA,MAAA,KAAK,EAAE,gBAAcP,eALrB;AAMA,MAAA,OAAO,EACL;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEI,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAcH;;AA3CuB;;AA8C5B,eAAepB,GAAf","sourcesContent":["import React, {Component } from 'react';\nimport JSONdata from \"../data.json\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { ColumnChart } from 'react-chartkick'\n\nclass Bar extends Component {\n    createLegend(json) {\n      var legend = [];\n      for (var i = 0; i < json[\"legend_name\"].length; i++) {\n        var type = \"fa fa-circle text-\" + json[\"types\"][i];\n        legend.push(<i className={type} key={i} />);\n        legend.push(\" \");\n        legend.push(json[\"legend_name\"][i]);\n      }\n      return legend;\n    }\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        var labels= JSONdata.US_Month_time.xlabel;\n        var series= JSONdata.US_Month_time.series;  \n        var dataCollectTime=JSONdata.Date;\n        var legend_name=JSONdata.US_Month_time.series_label;\n        var allData = [];\n        legend_name.forEach(function(name, i){\n          var dataset={};\n          dataset[\"name\"]=name;\n          var data={};\n          labels.forEach((label, j) => data[label] = series[i][j]);\n          dataset[\"data\"]=data;\n          allData.push(dataset);\n        });   \n        return (\n            <Card\n            statsIcon=\"fa fa-history\"\n            //id=\"chartHours\"\n            title=\"Daily Reported Cases in US\"\n            category=\"Daliy updates\"\n            stats={\"Updated by \"+dataCollectTime}\n            content={\n              <div className=\"ct-chart\">\n                <ColumnChart data={allData} />\n              </div>\n            }\n          />\n        );\n    }\n}\n \nexport default Bar;\n"]},"metadata":{},"sourceType":"module"}