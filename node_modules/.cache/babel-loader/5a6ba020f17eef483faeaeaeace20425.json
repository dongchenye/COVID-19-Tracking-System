{"ast":null,"code":"import _slicedToArray from \"/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/components/Table/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport JSONdata from \"../../data.json\";\nvar dataCollectTime = JSONdata.Date;\nconst rows = JSONdata.US_location;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'State',\n  numeric: false,\n  disablePadding: false,\n  label: 'State'\n}, {\n  id: 'County',\n  numeric: false,\n  disablePadding: false,\n  label: 'County'\n}, {\n  id: 'Confirmed',\n  numeric: true,\n  disablePadding: false,\n  label: 'Confirmed'\n}, {\n  id: 'Deaths',\n  numeric: true,\n  disablePadding: false,\n  label: 'Deaths'\n}, {\n  id: 'Recovered',\n  numeric: true,\n  disablePadding: false,\n  label: 'Recovered'\n}];\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        order = props.order,\n        orderBy = props.orderBy,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, headCells.map(headCell => React.createElement(TableCell, {\n    key: headCell.id,\n    align: 'left',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    //paddingUp: theme.spacing(2),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected;\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h3\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"State Reported Cases \", React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"(Updated by \", dataCollectTime)), React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState('asc'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState('calories'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState(0),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        page = _React$useState6[0],\n        setPage = _React$useState6[1];\n\n  const _React$useState7 = React.useState(10),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        rowsPerPage = _React$useState8[0],\n        setRowsPerPage = _React$useState8[1];\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    \"aria-label\": \"enhanced table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    return React.createElement(TableRow, {\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, row.State), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, row.County), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, row.Confirmed), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, row.Deaths), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, row.Recovered));\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/components/Table/Table.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","IconButton","Tooltip","FilterListIcon","JSONdata","dataCollectTime","Date","rows","US_location","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","numSelected","number","func","oneOf","string","rowCount","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","min","length","slice","row","State","County","Confirmed","Deaths","Recovered"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport JSONdata from \"../../data.json\";\n\nvar dataCollectTime=JSONdata.Date;\nconst rows = JSONdata.US_location;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'State', numeric: false, disablePadding: false, label: 'State' },\n  { id: 'County', numeric: false, disablePadding: false, label: 'County' },\n  { id: 'Confirmed', numeric: true, disablePadding: false, label: 'Confirmed' },\n  { id: 'Deaths', numeric: true, disablePadding: false, label: 'Deaths' },\n  { id: 'Recovered', numeric: true, disablePadding: false, label: 'Recovered' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    //paddingUp: theme.spacing(2),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      \n    <Typography className={classes.title} variant=\"h3\" id=\"tableTitle\">\n        State Reported Cases <h6>(Updated by {dataCollectTime}</h6>\n    </Typography>\n    <Tooltip title=\"Filter list\">\n        <IconButton aria-label=\"filter list\">\n        <FilterListIcon />\n        </IconButton>\n    </Tooltip>\n    \n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                    >\n                      <TableCell >{row.State}</TableCell>\n                      <TableCell >{row.County}</TableCell>\n                      <TableCell >{row.Confirmed}</TableCell>\n                      <TableCell >{row.Deaths}</TableCell>\n                      <TableCell >{row.Recovered}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}