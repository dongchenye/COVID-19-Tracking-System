{"ast":null,"code":"var _jsxFileName = \"/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/variables/LineChart.js\";\nimport React, { Component } from 'react';\nimport JSONdata from \"../data.json\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"components/Card/Card.jsx\";\nvar labels = JSONdata.US_Week_time.xlabel;\nvar series = JSONdata.US_Week_time.series;\nvar legend_name = JSONdata.US_Week_time.series_label;\nvar allData = [];\nlegend_name.forEach(function (name, i) {\n  var dataset = {};\n  dataset[\"name\"] = name;\n  var data = series[i];\n  dataset[\"data\"] = data;\n  allData.push(dataset);\n});\n\nclass ApexChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: allData,\n      options: {\n        chart: {\n          width: 'relative',\n          height: 'relative',\n          type: 'line',\n          dropShadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 0.2\n          },\n          toolbar: {\n            show: true\n          }\n        },\n        title: {\n          text: 'Weekly Cumulative Cases Tracking in US',\n          align: 'left'\n        },\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        grid: {\n          borderColor: '#e7e7e9',\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        markers: {\n          size: 1\n        },\n        xaxis: {\n          categories: labels,\n          title: {\n            text: 'Day'\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Number of Cases'\n          }\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'right',\n          floating: true\n        },\n        animations: {\n          enabled: true,\n          easing: 'easeinout',\n          speed: 800,\n          animateGradually: {\n            enabled: true,\n            delay: 150\n          },\n          dynamicAnimation: {\n            enabled: true,\n            speed: 350\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    console.log(allData);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Card, {\n      statsIcon: \"fa fa-history\",\n      id: \"chartHours\" //title=\"Weekly Cumulative Cases Tracking in US\"\n      // category={\"Updated by \"+dataCollectTime}\n      ,\n      content: React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: \"center\",\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"line\",\n        width: \"80%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ApexChart;","map":{"version":3,"sources":["/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/variables/LineChart.js"],"names":["React","Component","JSONdata","Chart","Card","labels","US_Week_time","xlabel","series","legend_name","series_label","allData","forEach","name","i","dataset","data","push","ApexChart","constructor","props","state","options","chart","width","height","type","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","title","text","align","dataLabels","stroke","curve","grid","borderColor","row","colors","markers","size","xaxis","categories","yaxis","legend","position","horizontalAlign","floating","animations","easing","speed","animateGradually","delay","dynamicAnimation","render","console","log","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport JSONdata from \"../data.json\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"components/Card/Card.jsx\";\n\nvar labels= JSONdata.US_Week_time.xlabel;\nvar series= JSONdata.US_Week_time.series;\nvar legend_name=JSONdata.US_Week_time.series_label;\n\nvar allData = [];\nlegend_name.forEach(function(name, i){\n  var dataset={};\n  dataset[\"name\"]=name;\n  var data=series[i]\n  dataset[\"data\"]=data;\n  allData.push(dataset);\n}); \n\nclass ApexChart extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n      \n        series: allData,\n        options: {\n          chart: {\n            width: 'relative',\n            height: 'relative',\n            type: 'line',\n            dropShadow: {\n              enabled: true,\n              color: '#000',\n              top: 18,\n              left: 7,\n              blur: 10,\n              opacity: 0.2\n            },\n            toolbar: {\n              show: true\n            }\n          },\n          title: {\n            text: 'Weekly Cumulative Cases Tracking in US',\n            align: 'left',\n          },\n          dataLabels: {\n            enabled: true,\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          grid: {\n            borderColor: '#e7e7e9',\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n          },\n          markers: {\n            size: 1\n          },\n          xaxis: {\n            categories: labels,\n            title: {\n              text: 'Day'\n            }\n          },\n          yaxis: {\n            title: {\n              text: 'Number of Cases'\n            }\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n                enabled: true,\n                delay: 150\n            },\n            dynamicAnimation: {\n                enabled: true,\n                speed: 350\n            }\n        }\n        },\n      \n      \n      };\n    }\n\n  \n\n    render() {\n        console.log(allData)\n      return (\n        <div>\n            <Card\n              statsIcon=\"fa fa-history\"\n              id=\"chartHours\"\n              //title=\"Weekly Cumulative Cases Tracking in US\"\n              // category={\"Updated by \"+dataCollectTime}\n              content={\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: \"center\",\n                  height: '100%'\n                }}>\n                  \n                  <Chart\n                    options={this.state.options}\n                    series={this.state.series}\n                    type=\"line\"\n                    width=\"80%\"\n\n                  />\n                  <br></br>\n                </div>\n              }\n            />\n\n        </div>\n      );\n    }\n  }\n  export default ApexChart;"]},"metadata":{},"sourceType":"module"}