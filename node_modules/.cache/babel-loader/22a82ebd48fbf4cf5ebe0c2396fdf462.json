{"ast":null,"code":"var _jsxFileName = \"/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/variables/Bar.js\";\nimport React, { Component } from 'react';\nimport JSONdata from \"../data.json\";\nimport Chart from \"react-apexcharts\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from '@material-ui/core/CardHeader';\nvar labels = JSONdata.US_Month_New_add.xlabel;\nvar series = JSONdata.US_Month_New_add.series;\nvar dataCollectTime = JSONdata.Date;\nvar legend_name = JSONdata.US_Month_New_add.series_label;\nvar allData = [];\nlegend_name.forEach(function (name, i) {\n  var dataset = {};\n  dataset[\"name\"] = name;\n  var data = series[i];\n  dataset[\"data\"] = data;\n  allData.push(dataset);\n});\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: allData,\n      options: {\n        chart: {\n          type: 'bar',\n          height: 350,\n          stacked: true,\n          toolbar: {\n            show: true\n          },\n          zoom: {\n            enabled: true\n          }\n        },\n        colors: ['#1E90FF', '#B22222', '#FFA500'],\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: 'bottom',\n              offsetX: -10,\n              offsetY: 0\n            }\n          }\n        }],\n        plotOptions: {\n          bar: {\n            horizontal: false\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          categories: labels\n        },\n        legend: {\n          position: 'right',\n          offsetY: 40\n        },\n        fill: {\n          opacity: 1\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      style: {\n        fontSize: 14\n      },\n      title: React.createElement(\"h3\", {\n        style: {\n          fontWeight: \"inherit\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Cumulative Cases in US\"),\n      subheader: React.createElement(\"p\", {\n        className: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Updated by \" + dataCollectTime),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"bar\",\n      width: \"85%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Bar;","map":{"version":3,"sources":["/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/variables/Bar.js"],"names":["React","Component","JSONdata","Chart","Card","CardContent","CardHeader","labels","US_Month_New_add","xlabel","series","dataCollectTime","Date","legend_name","series_label","allData","forEach","name","i","dataset","data","push","Bar","constructor","props","state","options","chart","type","height","stacked","toolbar","show","zoom","enabled","colors","responsive","breakpoint","legend","position","offsetX","offsetY","plotOptions","bar","horizontal","xaxis","categories","fill","opacity","render","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport JSONdata from \"../data.json\";\nimport Chart from \"react-apexcharts\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from '@material-ui/core/CardHeader';\n\nvar labels= JSONdata.US_Month_New_add.xlabel;\nvar series= JSONdata.US_Month_New_add.series;  \nvar dataCollectTime=JSONdata.Date;\nvar legend_name=JSONdata.US_Month_New_add.series_label;\nvar allData = [];\nlegend_name.forEach(function(name, i){\n  var dataset={};\n  dataset[\"name\"]=name;\n  var data=series[i]\n  dataset[\"data\"]=data;\n  allData.push(dataset);\n});  \n\n\nclass Bar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          series: allData,\n          options: {\n            chart: {\n              type: 'bar',\n              height: 350,\n              stacked: true,\n              toolbar: {\n                show: true\n              },\n              zoom: {\n                enabled: true\n              }\n            },\n            colors: ['#1E90FF', '#B22222', '#FFA500'],\n            responsive: [{\n              breakpoint: 480,\n              options: {\n                legend: {\n                  position: 'bottom',\n                  offsetX: -10,\n                  offsetY: 0\n                }\n              }\n            }],\n            plotOptions: {\n              bar: {\n                horizontal: false,\n                \n              },\n            },\n            xaxis: {\n              type: 'datetime',\n              categories: labels\n            },\n            legend: {\n              position: 'right',\n              offsetY: 40\n            },\n            fill: {\n              opacity: 1\n            }\n          },\n        \n        \n        };\n    }\n    render() { \n\n        return (\n          <Card>\n            <CardHeader style={{fontSize: 14}}\n              title={<h3 style={{ fontWeight: \"inherit\"}}>Cumulative Cases in US</h3>}\n              subheader={<p className=\"category\">{\"Updated by \"+dataCollectTime}</p>}\n            />\n            <CardContent>\n              <Container maxWidth=\"md\">\n                    <br></br>\n                  <Chart options={this.state.options} series={this.state.series} type=\"bar\" width=\"85%\" />\n                    <br></br>\n                </Container>\n              </CardContent>\n            </Card>\n        );\n    }\n}\n \nexport default Bar;\n\n"]},"metadata":{},"sourceType":"module"}