{"ast":null,"code":"var _jsxFileName = \"/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/components/MapComponent/Map.js\";\nimport React, { Fragment } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, Circle } from \"react-google-maps\";\n\nconst Map = props => {\n  var options = {\n    strokeColor: \"#ff0000\"\n  };\n  return React.createElement(GoogleMap, {\n    defaultZoom: props.zoom,\n    defaultCenter: props.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.places.map(place => {\n    return React.createElement(Fragment, {\n      key: place.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Circle, {\n      defaultCenter: {\n        lat: parseFloat(place.center.lat),\n        lng: parseFloat(place.center.lng)\n      },\n      radius: place.Confirmed * 50,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default withScriptjs(withGoogleMap(Map));","map":{"version":3,"sources":["/Users/dongqingye/Desktop/project/light-bootstrap-dashboard-react-master/COVID-19-Tracking-System/src/components/MapComponent/Map.js"],"names":["React","Fragment","withGoogleMap","GoogleMap","withScriptjs","Marker","Circle","Map","props","options","strokeColor","zoom","center","places","map","place","id","lat","parseFloat","lng","Confirmed"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,MALF,QAMO,mBANP;;AAQA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACjB,MAAIC,OAAO,GAAC;AAACC,IAAAA,WAAW,EAAE;AAAd,GAAZ;AAEA,SACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEF,KAAK,CAACG,IADrB;AAEE,IAAA,aAAa,EAAEH,KAAK,CAACI,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,KAAK,CAACK,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACzB,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAK,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbC,QAAAA,GAAG,EAAEC,UAAU,CAACH,KAAK,CAACH,MAAN,CAAaK,GAAd,CADF;AAEbE,QAAAA,GAAG,EAAED,UAAU,CAACH,KAAK,CAACH,MAAN,CAAaO,GAAd;AAFF,OADjB;AAKE,MAAA,MAAM,EAAEJ,KAAK,CAACK,SAAN,GAAgB,EAL1B;AAME,MAAA,OAAO,EAAEX,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAkBD,GAnBA,CAJH,CADF;AA2BH,CA9BD;;AAgCA,eAAeL,YAAY,CAACF,aAAa,CAACK,GAAD,CAAd,CAA3B","sourcesContent":["import React, {Fragment} from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n  Circle\n} from \"react-google-maps\";\n\nconst Map = props => {\n    var options={strokeColor: \"#ff0000\"}\n\n    return (\n      <GoogleMap\n        defaultZoom={props.zoom}\n        defaultCenter={props.center}\n      >\n        {props.places.map(place => {\n          return (\n            <Fragment key={place.id}>\n              {/* <Marker\n                position={{\n                  lat: parseFloat(place.center.lat),\n                  lng: parseFloat(place.center.lng)\n                }}\n              /> */}\n              <Circle\n                defaultCenter={{\n                  lat: parseFloat(place.center.lat),\n                  lng: parseFloat(place.center.lng)\n                }}\n                radius={place.Confirmed*50}\n                options={options}\n              />\n            </Fragment>\n          );\n        })}\n      </GoogleMap>\n    );\n}\n\nexport default withScriptjs(withGoogleMap(Map));\n"]},"metadata":{},"sourceType":"module"}